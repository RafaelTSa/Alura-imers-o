# -*- coding: utf-8 -*-
"""Imersão Python - Aulas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QHCJDlBt_lvtmpZY4a77Q9IptV4uKk_m

**Aula 2** - *Importação*
"""

import pandas as pd
import plotly.express as px

from re import escape
df_Principal = pd.read_excel("/content/Tabela de ações.xlsx", sheet_name="Principal")
df_Principal

df_Total_de_acoes = pd.read_excel("/content/Tabela de ações.xlsx", sheet_name="Total_de_acoes")
df_Total_de_acoes

df_Ticker = pd.read_excel("/content/Tabela de ações.xlsx", sheet_name="Ticker")
df_Ticker

df_ChatGPT = pd.read_excel("/content/Tabela de ações.xlsx", sheet_name="ChatGPT")
df_ChatGPT

df_Principal = df_Principal[["Ativo",	"Data",	"Último (R$)",	"Var. Dia (%)"]].copy()
df_Principal

df_Principal = df_Principal.rename(columns={"Último (R$)":"valor_final", "Var. Dia (%)": "var_dia_pct"}).copy()
df_Principal

df_Principal["var_pct"] = df_Principal["var_dia_pct"] /100
df_Principal ["valor_inicial"] = df_Principal ["valor_final"] / (df_Principal["var_pct"] +1)
df_Principal

df_Principal = df_Principal.merge(df_Total_de_acoes, left_on="Ativo", right_on="Código", how="left")
df_Principal

df_Principal = df_Principal.drop(columns=["Código"])
df_Principal

df_Principal["Variacao_rs"] = (df_Principal["valor_final"] - df_Principal["valor_inicial"])*df_Principal["Qtde. Teórica"]
df_Principal

pd.options.display.float_format="{:.2f}".format

df_Principal["Qtde. Teórica"] = df_Principal["Qtde. Teórica"].astype(int)
df_Principal

df_Principal = df_Principal.rename(columns={"Qtde. Teórica":"Qtd_teorica"}).copy()
df_Principal

# prompt: =SE(O2>0;"subiu";SE(O2<0;"Desceu";"Estável")) tenho uma planilha de excel que usa essa formula, e gostaria de aplicar a mesma operação em uma planilha do python como ficaria o resultado em 1 linha?

df_Principal['Resultado'] = ['subiu' if x > 0 else 'desceu' if x < 0 else 'estável' for x in df_Principal['Variacao_rs']]
df_Principal

df_Principal = df_Principal.merge(df_Ticker, left_on="Ativo", right_on="Ticker", how="left")
df_Principal = df_Principal.drop(columns=["Ticker"])
df_Principal

df_Principal = df_Principal.merge(df_ChatGPT, left_on="Nome", right_on="Nome da empresa", how="left")
df_Principal = df_Principal.drop(columns=["Nome da empresa"])
df_Principal



df_Principal = df_Principal.rename(columns={"Idade em anos":"ano_de_fundacao"}).copy()
df_Principal

# prompt: =SE(S2>100;"Mais de 100 anos";SE(S2<50;"Menos de 50";"Entre 50 e 100")) como fazer esse codigo em python com uma linha de codigo

df_Principal["ano_de_fundacao_texto"] = df_Principal["ano_de_fundacao"].apply(lambda x: "Mais de 100 anos" if x > 100 else ("Menos de 50" if x < 50 else "Entre 50 e 100"))
df_Principal

# Calcular o maior valor
maior = df_Principal['Variacao_rs'].max()

# Calcular o menor valor
menor = df_Principal['Variacao_rs'].min()

# Calcular a média
media = df_Principal['Variacao_rs'].mean()

# Corrigir para lidar com maiúsculas e minúsculas em 'Resultado'
# Calcular a média de quem subiu
media_subiu = df_Principal[df_Principal['Resultado'].str.lower() == 'subiu']['Variacao_rs'].mean()

# Calcular a média de quem desceu
media_desceu = df_Principal[df_Principal['Resultado'].str.upper() == 'DESCEU']['Variacao_rs'].mean()

# Calcular a média de quem está estável
media_estavel = df_Principal[df_Principal['Resultado'].str.upper() == 'ESTAVEL']['Variacao_rs'].mean()

# Imprimir os resultados formatados como moeda
print('Maior\t', locale.currency(maior, grouping=True))
print('Menor\t', locale.currency(menor, grouping=True))
print('Media\t', locale.currency(media, grouping=True))
print('Média de quem subiu\t', locale.currency(media_subiu, grouping=True))
print('Média de quem desceu\t', locale.currency(media_desceu, grouping=True))

df_Principal_subiu = df_Principal[df_Principal['Resultado'].str.lower() == 'subiu']
df_Principal_subiu

df_analise_segmento = df_Principal_subiu.groupby("Segmento")["Variacao_rs"].sum().reset_index()
df_analise_segmento

df_analise_saldo = df_Principal.groupby("Resultado")["Variacao_rs"].sum().reset_index()
df_analise_saldo

fig = px.bar(df_analise_saldo, x="Resultado", y="Variacao_rs", text=df_analise_saldo["Variacao_rs"].round(2), title="Variação Reais por Resultado")
fig.show()

fig = px.pie(df_analise_segmento, values="Variacao_rs", names="Segmento", title="Grafico de Pizza")
fig.show()